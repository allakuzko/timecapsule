// üé® –ü–µ—Ä–µ–º–∏–∫–∞–Ω–Ω—è —Ç–µ–º–∏
const toggle = document.getElementById("toggle-theme");
toggle.addEventListener("change", () => {
  document.body.classList.toggle("dark-theme", toggle.checked);
});

// üì¨ –û–±—Ä–æ–±–∫–∞ —Ñ–æ—Ä–º–∏
document.getElementById('form').addEventListener('submit', async (e) => {
  e.preventDefault();

  const msg = document.getElementById('msg').value;
  const date = document.getElementById('date').value;

  if (!msg || !date) {
    alert("–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞–ø–æ–≤–Ω–∏ –æ–±–∏–¥–≤–∞ –ø–æ–ª—è.");
    return;
  }

  try {
    const res = await fetch('http://localhost:8080/capsule', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ message: msg, openAt: date }),
    });

    if (!res.ok) {
      throw new Error("–©–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫ –∑ —Å–µ—Ä–≤–µ—Ä–æ–º.");
    }

    const data = await res.json();
    const respBlock = document.getElementById('response');
    respBlock.classList.add('show');
    respBlock.textContent = `‚úÖ –ö–∞–ø—Å—É–ª–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–∞! ID: ${data.id}`;
  } catch (err) {
    alert("üö´ –ü–æ–º–∏–ª–∫–∞: " + err.message);
  }
});
